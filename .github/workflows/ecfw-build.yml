name: EC fw build for CI

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Installing source ecfw
      uses: actions/checkout@v4

    - name: Generate installation access token
      id: ia_token
      run: |
        echo "workspace"
        cd $GITHUB_WORKSPACE
        pwd
        ls
        echo "change to .github/workflows"
        cd .github/workflows
        ls
        echo IA_TOKEN=$(python3 decode_token.py ${{ secrets.IA_SECRETS }}) >> $GITHUB_OUTPUT

    - name: Installing source zephyr
      uses: actions/checkout@v4
      with:
        repository: btsil/zephyr 
        path: ecfwwork/zephyr_fork
        token: "${{ steps.ia_token.outputs.IA_TOKEN }}"

    - name: check filesystem
      run: |
        echo "change to $GITHUB_WORKSPACE/ecfwwork"
        cd $GITHUB_WORKSPACE/ecfwwork
        ls

    - name: Install kitware
      run: |
        cd $GITHUB_WORKSPACE
        echo "Install kitware"
        wget https://apt.kitware.com/kitware-archive.sh
        sudo bash kitware-archive.sh

    - name: Install dependencies
      run: |
        echo "Install dependencies"
        sudo apt install -y --no-install-recommends git cmake ninja-build gperf
        sudo apt install -y --no-install-recommends ccache dfu-util device-tree-compiler wget
        sudo apt install -y --no-install-recommends python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file
        sudo apt install -y --no-install-recommends make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1

    - name: Checking versions - CMake 3.20.5, Python 3.8, Devicetree compiler 1.4.6
      run: |
        cmake --version
        python3 --version
        dtc --version

    - name: Installing Zephyr and Python dependencies
      run: |
        if [ ! -d zephyrproject ]; then mkdir $GITHUB_WORKSPACE/zephyrproject; fi
        sudo apt install -y python3-venv
        python3 -m venv $GITHUB_WORKSPACE/zephyrproject/.venv
        . $GITHUB_WORKSPACE/zephyrproject/.venv/bin/activate
        pip install west
        west init $GITHUB_WORKSPACE/zephyrproject
        cd $GITHUB_WORKSPACE/zephyrproject
        echo "first time calling west - pwd"
        pwd
        west update
        west zephyr-export
        pip install -r $GITHUB_WORKSPACE/zephyrproject/zephyr/scripts/requirements.txt
        echo "Install Zephyr SDK"
        cd $GITHUB_WORKSPACE
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/zephyr-sdk-0.16.4_linux-x86_64.tar.xz
        wget -O - https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.4/sha256.sum | shasum --check --ignore-missing
        tar xf zephyr-sdk-0.16.4_linux-x86_64.tar.xz
        cd zephyr-sdk-0.16.4
        ./setup.sh -h -c
        echo "Initializng west ecfw-zephyr"
        cd $GITHUB_WORKSPACE
        west init -l
        cd $GITHUB_WORKSPACE/ecfwwork/zephyr_fork
        . zephyr-env.sh
        cd $GITHUB_WORKSPACE
        west build -c -p auto -b mec172x_azbeach
